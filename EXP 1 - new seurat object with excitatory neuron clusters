library(Seurat)
EXP <- Read10X(data.dir = "C:/Users/JBH141/Documents/Seurat/hg19/EXP/dmso/")
EXP <- Read10X(data.dir = "C:/Users/JBH141/Documents/Seurat/hg19/EXP/ro48/")

subset_EXP <- subset(x = EXP, subset = EXP > low & EXP < high)

EXP1$ID = "dmso"
EXP2$ID = "ro48"
merged_object = merge(x=EXP1, y=EXP2)

# pretend that cells were originally assigned to one of two replicates (we assign randomly here)
# if your cells do belong to multiple replicates, and you want to add this info to the Seurat
# object create a data frame with this information (similar to replicate.info below)
set.seed(42)
EXP$replicate <- sample(c("dmso", "ro48"), size = ncol(EXP), replace = TRUE)
EXP <- AddMetaData(object = EXP, metadata = replicate.info)

# Plot UMAP, coloring cells by cell type (currently stored in object@ident)
DimPlot(EXP, reduction = "umap")


# How do I create a UMAP plot where cells are colored by replicate?  First, store the current
# identities in a new column of meta.data called CellType
EXP$CellType <- Idents(EXP)


# Next, switch the identity class of all cells to reflect replicate ID
Idents(EXP1) <- "replicate"
DimPlot(EXP1, reduction = "umap")


# alternately : DimPlot(EXP1, reduction = 'umap', group.by = 'replicate') you can pass the
# shape.by to label points by both replicate and cell type
# Switch back to cell type labels
Idents(EXP1) <- "CellType"


# How many cells are in each cluster
table(Idents(EXP1))


# How many cells are in each replicate?
table(EXP1$replicate)


# What proportion of cells are in each cluster?
prop.table(table(Idents(EXP1)))


# How does cluster membership vary by replicate?
table(Idents(EXP1), EXP1$replicate)
prop.table(table(Idents(EXP1), EXP1$replicate), margin = 2)


# What are the cell names of all NK cells?
WhichCells(EXP1, idents = "NK")


# How can I extract expression matrix for all NK cells (perhaps, to load into another package)
nk.raw.data <- as.matrix(GetAssayData(EXP1, slot = "counts")[, WhichCells(EXP1, ident = "NK")])

# Can I create a Seurat object based on expression of a feature or value in object metadata?
subset(EXP1, subset = MS4A1 > 1)
subset(EXP1, subset = replicate == "rep2")


# Can I create a Seurat object of just the NK cells and B cells?
subset(EXP1, idents = c("NK", "B"))


# Can I create a Seurat object of all cells except the NK cells and B cells?
subset(EXP1, idents = c("NK", "B"), invert = TRUE)


# note that if you wish to perform additional rounds of clustering after subsetting we recommend
# re-running FindVariableFeatures() and ScaleData()
# How can I calculate the average expression of all cells within a cluster?
cluster.averages <- AverageExpression(EXP1)
head(cluster.averages[["RNA"]][, 1:5])


# Return this information as a Seurat object (enables downstream plotting and analysis) First,
# replace spaces with underscores '_' so ggplot2 doesn't fail
orig.levels <- levels(EXP1)
Idents(EXP1) <- gsub(pattern = " ", replacement = "_", x = Idents(EXP1))
orig.levels <- gsub(pattern = " ", replacement = "_", x = orig.levels)
levels(EXP1) <- orig.levels
cluster.averages <- AverageExpression(EXP1, return.seurat = TRUE)
cluster.averages


# How can I plot the average expression of NK cells vs. CD8 T cells?  Pass do.hover = T for an
# interactive plot to identify gene outliers
CellScatter(cluster.averages, cell1 = "NK", cell2 = "CD8_T")


# How can I calculate expression averages separately for each replicate?
cluster.averages <- AverageExpression(EXP1, return.seurat = TRUE, add.ident = "replicate")
CellScatter(cluster.averages, cell1 = "CD8_T_rep1", cell2 = "CD8_T_rep2")


# You can also plot heatmaps of these 'in silico' bulk datasets to visualize agreement between
# replicates
DoHeatmap(cluster.averages, features = unlist(TopFeatures(EXP1[["pca"]], balanced = TRUE)), size = 3, draw.lines = FALSE)
